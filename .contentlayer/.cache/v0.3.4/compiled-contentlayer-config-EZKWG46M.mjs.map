{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\nimport type { Options as PrettyCodeOptions } from \"rehype-pretty-code\";\nimport type { Plugin } from \"unified\";\nimport type { Root } from \"hast\";\nimport type { VFile } from \"vfile\";\n\ninterface NodeWithChildren {\n  type: string;\n  children: NodeWithChildren[];\n  properties?: {\n    className?: string[];\n  };\n}\n\ninterface TextNode extends NodeWithChildren {\n  type: \"text\";\n  value: string;\n  children: never[];\n}\n\nconst Note = defineDocumentType(() => ({\n  name: \"Note\",\n  filePathPattern: \"notes/**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    date: { type: \"date\", required: true },\n    description: { type: \"string\", required: true },\n    cover: { type: \"string\", required: false },\n    main_color: { type: \"string\", required: false },\n    categories: { type: \"string\", required: false },\n    tags: { type: \"list\", of: { type: \"string\" }, required: false },\n    ai: { type: \"list\", of: { type: \"string\" }, required: false },\n    sticky: { type: \"number\", required: false },\n    updated: { type: \"date\", required: false },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (note) => `/notes/${note._raw.flattenedPath.replace(/notes\\/?/, \"\")}`,\n    },\n  },\n}));\n\nconst Geek = defineDocumentType(() => ({\n  name: \"Geek\",\n  filePathPattern: \"geek/**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    date: { type: \"date\", required: true },\n    description: { type: \"string\", required: true },\n    cover: { type: \"string\", required: false },\n    main_color: { type: \"string\", required: false },\n    categories: { type: \"string\", required: false },\n    tags: { type: \"list\", of: { type: \"string\" }, required: false },\n    updated: { type: \"date\", required: false },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (post) => `/geek/${post._raw.flattenedPath.replace(/geek\\/?/, \"\")}`,\n    },\n  },\n}));\n\nconst QA = defineDocumentType(() => ({\n  name: \"QA\",\n  filePathPattern: \"qa/**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    date: { type: \"date\", required: true },\n    description: { type: \"string\", required: true },\n    cover: { type: \"string\", required: false },\n    main_color: { type: \"string\", required: false },\n    categories: { type: \"string\", required: false },\n    tags: { type: \"list\", of: { type: \"string\" }, required: false },\n    updated: { type: \"date\", required: false },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (post) => `/qa/${post._raw.flattenedPath.replace(/qa\\/?/, \"\")}`,\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Note, Geek, QA],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypePrettyCode as any,\n        {\n          theme: \"github-dark\",\n          onVisitLine(node: NodeWithChildren) {\n            if (node.children.length === 0) {\n              node.children = [{ type: \"text\", value: \" \", children: [] } as TextNode];\n            }\n          },\n          onVisitHighlightedLine(node: NodeWithChildren) {\n            if (node.properties?.className) {\n              node.properties.className.push(\"line--highlighted\");\n            }\n          },\n          onVisitHighlightedWord(node: NodeWithChildren) {\n            if (node.properties) {\n              node.properties.className = [\"word--highlighted\"];\n            }\n          },\n        } as PrettyCodeOptions,\n      ],\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: [\"anchor\"],\n          },\n        },\n      ],\n    ],\n  },\n}); "],
  "mappings": "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",
  "names": []
}
